apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ibm-gradle-pact-verify
  annotations:
    description: Performs pact verification on the service provider
    app.openshift.io/description: Performs pact verification on the service provider
    app.openshift.io/vcs-uri: https://github.com/IBM/ibm-garage-tekton-tasks
    app.openshift.io/vcs-ref: master
  labels:
    version: 0.0.0
spec:
  params:
    - name: git-url
      type: string
      description: The git repository url
    - name: revision
      description: The git reference that was checked out
    - name: image-url
      type: string
      description: "The location where to push the image in the form of <server>/<namespace>/<repository>:<tag>"
      default: ""
    - name: app-name
      type: string
      description: The name of the image name for the application
    - name: source-dir
      type: string
      default: /source
    - name: gradle-image
      type: string
      default: gradle:jdk11
    - name: tools-image
      type: string
      default: garagecatalyst/ibmcloud-dev:1.0.10
  volumes:
    - name: source
      emptyDir: {}
  stepTemplate:
    env:
      - name: GRADLE_USER_HOME
        value: $(params.source-dir)
  steps:
    - name: git-clone
      image: alpine/git
      command: ["/bin/sh"]
      args:
        - -c
        - |
          git clone $(params.git-url) $(params.source-dir)
          cd $(params.source-dir)

          git reset --hard $(params.revision)

          echo ""
          echo "REVISION: $(params.revision)"
          echo "SOURCE_DIR: $(params.source-dir)"
          echo "IMAGE_URL: $(params.image-url)"
          echo "IMAGE_NAME: $(params.app-name)"
      volumeMounts:
        - name: source
          mountPath: $(params.source-dir)
    - name: pact-verify
      image: $(params.gradle-image)
      workingdir: $(params.source-dir)
      command: ["/bin/bash"]
      envFrom:
        - configMapRef:
            name: pactbroker-config
            optional: true
        - secretRef:
            name: pactbroker-access
            optional: true
      args:
        - -c
        - |
          set -e
          if [[ -z "${PACTBROKER_URL}" ]]; then
            echo "PactBroker url not set. Skipping pact verification"
            exit 0
          fi

          PROTOCOL=http
          HOST=$(params.app-name)
          PORT=80

          set -x

          if ./gradlew tasks --all | grep -Eq "^pactVerify"; then
              echo "Pact Verify task found"
          else
              echo "Skipping Pact Verify step, no task defined"
              exit 0
          fi

          ./gradlew pactVerify \
            -PpactBrokerUrl=${PACTBROKER_URL} \
            -PpactProtocol=${PROTOCOL} \
            -PpactHost=${HOST} \
            -PpactPort=${PORT} \
            -Ppact.verifier.publishResults=true
      volumeMounts:
        - name: source
          mountPath: $(params.source-dir)
