apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: igc-gitops-edge
  annotations:
    description: Registers the image with the Edge server using the hzn cli
  labels:
    version: 0.0.0
spec:
  volumes:
    - name: source
      emptyDir: {}
    - name: icp-ca
      secret:
        secretName: edge-access
        items:
          - key: HZN_CERTIFICATE
            path: icp-ca.crt
  params:
    - name: repo-url
      type: string
      description: The git repository url
    - name: revision
      type: string
      description: The branch, tag, or git reference from the git repo-url location
      default: master
    - name: image
      type: string
      description: "The location where to push the image in the form of <server>/<namespace>/<repository>:<tag>"
    - name: source-dir
      type: string
      default: /source
    - name: tools-image
      type: string
      default: garagecatalyst/ibmcloud-dev:1.1.3
  steps:
    - name: Git clone
      image: alpine/git
      command: ["/bin/bash"]
      args:
        - -c
        - |
          git clone $(params.repo-url) $(params.source-dir)
          cd $(params.source-dir)
          git checkout $(params.revision)
      volumeMounts:
        - name: source
          mountPath: $(params.source-dir)
    - name: setup
      image: $(params.tools-image)
      workingdir: $(params.source-dir)
      command: ["/bin/bash"]
      env:
        - name: BRANCH
          value: $(params.revision)
      args:
        - -c
        - |
          set -x
          set +e

          git fetch --unshallow
          git fetch --tags
          git tag -l

          git checkout ${BRANCH}

          echo "IMAGE_VERSION=$(git describe --abbrev=0 --tags)" > ./env-config
          echo "IMAGE_NAME=$(basename -s .git `git config --get remote.origin.url` | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')" >> ./env-config

          cat ./env-config
      volumeMounts:
        - name: source
          mountPath: $(params.source-dir)
    - name: gitops-edge
      image: $(params.tools-image)
      workingdir: $(params.source-dir)
      securityContext:
        allowPrivilegeEscalation : true
      env:
        - name: HOME
          value: /home/devops
      envFrom:
        - configMapRef:
            name: ibmcloud-config
            optional: true
        - secretRef:
            name: edge-access
            optional: true
        - secretRef:
            name: ibmcloud-apikey
            optional: true
      volumeMounts:
        - mountPath: /opt/certs
          name: icp-ca
        - name: source
          mountPath: $(params.source-dir)
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e
          set -x

          if [[ -z "${HZN_EXCHANGE_URL}" ]]; then
            echo "Edge Exchange has not been configured. Skipping trigger step"
            exit 0
          fi

          if [[ -z "${HZN_EXCHANGE_USER_AUTH}" ]] || [[ -z "${HZN_CERTIFICATE}" ]]; then
            echo "Edge Credentials or Certificate not set"
            exit 1
          fi

          if [[ -z "${branch}" ]]; then
            branch="master"
          fi

          . ./env-config

          hzn version

          # Verify the Edge Cert is visible from the Tekton Task
          ls /opt/certs/*.crt

          cp /opt/certs/icp-ca.crt /usr/local/share/ca-certificates && update-ca-certificates

          APP_IMAGE="${REGISTRY_URL}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}"

          jq -n --arg HZN_ORG_ID "${HZN_ORG_ID}" \
            --arg APP_IMAGE "${APP_IMAGE}" \
            --arg IMAGE_NAME "${IMAGE_NAME}" \
            --arg IMAGE_VERSION "${IMAGE_VERSION}" \
            '{"HZN_ORG_ID": $HZN_ORG_ID, "MetadataVars": {"DOCKER_IMAGE_BASE": $APP_IMAGE,"SERVICE_NAME": $IMAGE_NAME,"SERVICE_VERSION": $IMAGE_VERSION} }' > ./horizon/hzn.json

          cat ./horizon/hzn.json

          # Publish Service to Edge Application Manager
          hzn key create "IBM" "user@us.ibm.com"

          make publish-service

          echo "Edge Service registered"
